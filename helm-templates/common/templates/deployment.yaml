apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Release.name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        {{- if .Values.annotations }}
        {{- range $key, $value := .Values.annotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
        {{- end }}
      labels:
        app: {{ .Release.Name }}
    spec:
      initContainers:
        {{- include "chart.initContainers" . | nindent 8 }}
      containers:
        - name: {{ .Release.Name }}-container
          image: {{ .Values.image.repository }}{{ .Values.image.name }}:{{ .Values.image.tag }}
          {{- if .Values.image.pullPolicy }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- end }}
          {{- if .Values.command }}
          command: {{ .Values.command}}
          {{- end }}
          {{- if .Values.extraArgs }}
          args: 
            {{- range .Values.extraArgs }}
            - "{{ . }}"
            {{- end }}
          {{- end }}
          ports:
            {{- range $index, $port := .Values.containerPorts }}
            - name: {{ $port.name }}
              containerPort: {{ $port.port }}
              protocol: {{ $port.protocol }}
            {{- end }}
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          envFrom:
            {{- toYaml .Values.envFrom | nindent 10 }}
          env:
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: '{{ $value }}'
            {{- end }}
          {{- if .Volumes.volumeMounts }}
          volumeMounts:
            {{- range $index, $vm := .Values.volumeMounts }}
            - name: {{ $vm.name }}
              mountPath: {{ $vm.mountPath }}
              {{- if $vm.subPath }}
              subPath: {{ $vm.subPath }}
              {{- end }}
            {{- end }}
          {{- end }}
      {{- if .Values.volumeMounts }}
      volumes:
        {{- range $index, $vm := .Values.volumeMounts }}
        - name: {{ $vm.name }}
        {{- if $vm.useConfigMap }}
          configMap:
            name: {{ $vm.configMapName }}
            {{- if $vm.configMapMode }}
            defaultMode: {{ $vm.configMapMode }}
            {{- end }}
        {{- else if $vm.claimName }}
          persistentVolumeClaim:
            claimName: {{$vm.claimName }}
        {{- end }}
        {{- end }}
      {{- end }}
      serviceAccount: {{ .Values.boundServiceAccount}}
